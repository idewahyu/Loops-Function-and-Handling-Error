{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"6. Handling Exception","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMRzkZxMAlS5Sxvznm+DtWj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Handling Error\n","\n","The exception handling process uses a ' try 'statement paired with except.\n","\n","For example, we want to handle an exception that occurs if there is a division of a number by the value zero (0)\n"],"metadata":{"id":"sUxIxgh0kklE"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"z-c3VdnSkjT3","executionInfo":{"status":"ok","timestamp":1648857670675,"user_tz":-420,"elapsed":4,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}}},"outputs":[],"source":["Div = 0"]},{"cell_type":"code","source":["Div = 1/a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"lPN1Ja0uk0HK","executionInfo":{"status":"error","timestamp":1648857671601,"user_tz":-420,"elapsed":368,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"76416e7d-fff9-4e53-9c18-a7b4d978782d"},"execution_count":2,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-9dd7f380eedb>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mDiv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'a' is not defined"]}]},{"cell_type":"code","source":["a = 0\n","\n","try :\n","  Div = 1/a \n","  print (Div)\n","except ZeroDivisionError :\n","  print ('can\\'t divide a number by zero')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g27ME8MQk2NZ","executionInfo":{"status":"ok","timestamp":1648857682057,"user_tz":-420,"elapsed":16,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"5d373046-d193-4f47-d352-ac2a2579188b"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["can't divide a number by zero\n"]}]},{"cell_type":"code","source":["open ('one piece')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"2gLIPKmJk4uF","executionInfo":{"status":"error","timestamp":1648857692581,"user_tz":-420,"elapsed":16,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"cf7ddeba-1921-4da2-b45a-b1557d14adcf"},"execution_count":4,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-03a8f5bff021>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mopen\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'one piece'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'one piece'"]}]},{"cell_type":"code","source":["try :\n","  with open ('one piece') as file :\n","    print (file.read())\n","except FileNotFoundError :\n","  print ('one piece isn\\'t real')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yhZNDbLFk7Vc","executionInfo":{"status":"ok","timestamp":1648857700071,"user_tz":-420,"elapsed":17,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"5da615d1-9fdc-42aa-c337-2217a58734ca"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["one piece isn't real\n"]}]},{"cell_type":"code","source":["try :\n","  with open ('one piece') as file :\n","    print (file.read())\n","except (FileNotFoundError,) :\n","  print ('one piece isn\\'t real')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r5J98GMxk9Gy","executionInfo":{"status":"ok","timestamp":1648857709377,"user_tz":-420,"elapsed":4,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"010be549-d7ef-4a9b-b23a-0bb76d086e28"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["one piece isn't real\n"]}]},{"cell_type":"code","source":["d = {'rata2' : '1'}"],"metadata":{"id":"vDH3tf5nk_hG","executionInfo":{"status":"ok","timestamp":1648857718777,"user_tz":-420,"elapsed":370,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["print ('rata2: {}') .format (d['rata2'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":183},"id":"G3xN4Hg9lBqN","executionInfo":{"status":"error","timestamp":1648857728338,"user_tz":-420,"elapsed":33,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"5d6d51a8-0d2a-4ede-f644-9d41626cb6a5"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["rata2: {}\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-bf54d72b3201>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'rata2: {}'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0md\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'rata2'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'NoneType' object has no attribute 'format'"]}]},{"cell_type":"code","source":["d = {'rata.rata': '10'}\n","\n","try:\n","    print('ratarata: {}'.format(d['ratarata']))\n","except KeyError:\n","    print('key not found in dictionary')\n","except ValueError:\n","    print('value does not match')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p1I0ic_SlD_i","executionInfo":{"status":"ok","timestamp":1648857738129,"user_tz":-420,"elapsed":8,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"c6397aa2-ded9-4c8d-ad6e-c7c9e51f86ca"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["key not found in dictionary\n"]}]},{"cell_type":"code","source":["c = {'prima' : '27.0'}\n","\n","try : \n","  print('pembulatan prima:{}' .format(int(c['prima'])))\n","except (ValueError, TypeError) as e :\n","  print('error handling : {}' .format(e))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8h3ieXlllGhI","executionInfo":{"status":"ok","timestamp":1648857756372,"user_tz":-420,"elapsed":6,"user":{"displayName":"Ali Daffa`","userId":"07141506395017039946"}},"outputId":"11af2b6d-ca41-4c87-bc53-fa481ec774e5"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["error handling : invalid literal for int() with base 10: '27.0'\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"gS_DoCSclK1q"},"execution_count":null,"outputs":[]}]}